import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
from scipy.integrate import odeint


def update_line(num, data, line):
    line.set_data(data[..., :num])
    return line,

def model(z,t):
    r = z[0]
    theta = z[1]
    drdt = 0
    dthetadt = 4.6 * t
    return([drdt, dthetadt])

# initial conditions
z0 = [1,0]

t = np.linspace(0,1.6, 30)

z = odeint(model, z0, t)

r= z[:,0]
theta= z[:,1]
data = np.array([theta, r])


fig1 = plt.figure()

l, = plt.polar([], [], 'r-')
#plt.xlim(0, 30)
plt.ylim(0, 2)
plt.title('test')
line_ani = animation.FuncAnimation(fig1, update_line, t.shape[0], fargs=(data, l),
                                   interval=50, blit=True)
plt.show()

